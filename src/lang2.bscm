;; Copyright 2014,2015 - William Emerison Six
;;  All rights reserved
;;  Distributed under LGPL 2.1 or Apache 2.0


(with-tests
 (define compose
   [|#!rest fns|
    [|#!rest args|
     (define compose-prime
       [|list-of-fns accum|
	(fold-left [|acc fn| (fn acc)] accum list-of-fns)])
     (let ((reversed-fns (reverse! fns)))
       (if (null? fns)
	   {apply identity args}
	   {compose-prime (cdr reversed-fns) (apply (car reversed-fns) args)}))]])
 (equal? ((compose) 5)
	 5)
 (equal? ((compose [|x| (* x 2)])
	  5)
	 10)
 (equal? ((compose [|x| (+ x 1)]
		   [|x| (* x 2)])
	  5)
	 11)
 (equal? ((compose [|x| (/ x 13)]
		   [|x| (+ x 1)]
		   [|x| (* x 2)])
	  5)
	 11/13))
